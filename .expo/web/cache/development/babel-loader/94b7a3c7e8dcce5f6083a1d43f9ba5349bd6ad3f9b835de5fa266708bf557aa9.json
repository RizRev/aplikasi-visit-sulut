{"ast":null,"code":"import React, { useEffect } from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport useColorScheme from \"react-native-web/dist/exports/useColorScheme\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator, CardStyleInterpolators } from '@react-navigation/stack';\nimport { useTheme, BaseSetting } from '@config';\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport Main from 'app/navigation/main';\nimport Loading from '@screens/Loading';\nimport Filter from '@screens/Filter';\nimport FlightFilter from '@screens/FlightFilter';\nimport BusFilter from '@screens/BusFilter';\nimport Search from '@screens/Search';\nimport SearchHistory from '@screens/SearchHistory';\nimport PreviewImage from '@screens/PreviewImage';\nimport SelectBus from '@screens/SelectBus';\nimport SelectCruise from '@screens/SelectCruise';\nimport CruiseFilter from '@screens/CruiseFilter';\nimport EventFilter from '@screens/EventFilter';\nimport SelectDarkOption from '@screens/SelectDarkOption';\nimport SelectFontOption from '@screens/SelectFontOption';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RootStack = createStackNavigator();\nexport default function Navigator() {\n  var language = useSelector(function (state) {\n    return state.application.language;\n  });\n  var _useTheme = useTheme(),\n    theme = _useTheme.theme,\n    colors = _useTheme.colors;\n  var isDarkMode = useColorScheme() === 'dark';\n  useEffect(function () {\n    i18n.use(initReactI18next).init({\n      resources: BaseSetting.resourcesLanguage,\n      lng: BaseSetting.defaultLanguage,\n      fallbackLng: BaseSetting.defaultLanguage,\n      compatibilityJSON: 'v3'\n    });\n  }, []);\n  useEffect(function () {\n    i18n.changeLanguage(language);\n  }, [language]);\n  useEffect(function () {\n    if (Platform.OS === 'android') {\n      StatusBar.setBackgroundColor(colors.primary, true);\n    }\n    StatusBar.setBarStyle(isDarkMode ? 'light-content' : 'dark-content', true);\n  }, [colors.primary, isDarkMode]);\n  return _jsx(NavigationContainer, {\n    theme: theme,\n    children: _jsxs(RootStack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      initialRouteName: \"Loading\",\n      children: [_jsx(RootStack.Screen, {\n        name: \"Loading\",\n        component: Loading,\n        options: {\n          gestureEnabled: false\n        }\n      }), _jsx(RootStack.Screen, {\n        name: \"Main\",\n        component: Main\n      }), _jsx(RootStack.Screen, {\n        name: \"Filter\",\n        component: Filter\n      }), _jsx(RootStack.Screen, {\n        name: \"FlightFilter\",\n        component: FlightFilter\n      }), _jsx(RootStack.Screen, {\n        name: \"BusFilter\",\n        component: BusFilter\n      }), _jsx(RootStack.Screen, {\n        name: \"Search\",\n        component: Search\n      }), _jsx(RootStack.Screen, {\n        name: \"SearchHistory\",\n        component: SearchHistory\n      }), _jsx(RootStack.Screen, {\n        name: \"PreviewImage\",\n        component: PreviewImage\n      }), _jsx(RootStack.Screen, {\n        name: \"SelectBus\",\n        component: SelectBus\n      }), _jsx(RootStack.Screen, {\n        name: \"SelectCruise\",\n        component: SelectCruise\n      }), _jsx(RootStack.Screen, {\n        name: \"CruiseFilter\",\n        component: CruiseFilter\n      }), _jsx(RootStack.Screen, {\n        name: \"EventFilter\",\n        component: EventFilter\n      }), _jsx(RootStack.Screen, {\n        name: \"SelectDarkOption\",\n        component: SelectDarkOption,\n        options: {\n          presentation: 'transparentModal',\n          cardStyleInterpolator: CardStyleInterpolators.forFadeFromCenter,\n          cardStyle: {\n            backgroundColor: 'rgba(0, 0, 0, 0.5)'\n          },\n          gestureEnabled: false\n        }\n      }), _jsx(RootStack.Screen, {\n        name: \"SelectFontOption\",\n        component: SelectFontOption,\n        options: {\n          presentation: 'transparentModal',\n          cardStyleInterpolator: CardStyleInterpolators.forFadeFromCenter,\n          cardStyle: {\n            backgroundColor: 'rgba(0, 0, 0, 0.5)'\n          }\n        }\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useEffect","StatusBar","Platform","useColorScheme","NavigationContainer","createStackNavigator","CardStyleInterpolators","useTheme","BaseSetting","i18n","initReactI18next","useSelector","Main","Loading","Filter","FlightFilter","BusFilter","Search","SearchHistory","PreviewImage","SelectBus","SelectCruise","CruiseFilter","EventFilter","SelectDarkOption","SelectFontOption","jsx","_jsx","jsxs","_jsxs","RootStack","Navigator","language","state","application","_useTheme","theme","colors","isDarkMode","use","init","resources","resourcesLanguage","lng","defaultLanguage","fallbackLng","compatibilityJSON","changeLanguage","OS","setBackgroundColor","primary","setBarStyle","children","screenOptions","headerShown","initialRouteName","Screen","name","component","options","gestureEnabled","presentation","cardStyleInterpolator","forFadeFromCenter","cardStyle","backgroundColor"],"sources":["C:/Users/prodi/OneDrive/Desktop/visit-north-app-source-expo/app/navigation/index.js"],"sourcesContent":["import React, {useEffect} from 'react';\nimport {StatusBar, Platform, useColorScheme} from 'react-native';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {\n  createStackNavigator,\n  CardStyleInterpolators,\n} from '@react-navigation/stack';\nimport {useTheme, BaseSetting} from '@config';\nimport i18n from 'i18next';\nimport {initReactI18next} from 'react-i18next';\nimport {useSelector} from 'react-redux';\n\n/* Main Stack Navigator */\nimport Main from 'app/navigation/main';\n/* Modal Screen only affect iOS */\nimport Loading from '@screens/Loading';\nimport Filter from '@screens/Filter';\nimport FlightFilter from '@screens/FlightFilter';\nimport BusFilter from '@screens/BusFilter';\nimport Search from '@screens/Search';\nimport SearchHistory from '@screens/SearchHistory';\nimport PreviewImage from '@screens/PreviewImage';\nimport SelectBus from '@screens/SelectBus';\nimport SelectCruise from '@screens/SelectCruise';\nimport CruiseFilter from '@screens/CruiseFilter';\nimport EventFilter from '@screens/EventFilter';\nimport SelectDarkOption from '@screens/SelectDarkOption';\nimport SelectFontOption from '@screens/SelectFontOption';\n\nconst RootStack = createStackNavigator();\n\nexport default function Navigator() {\n  const language = useSelector(state => state.application.language);\n  const {theme, colors} = useTheme();\n  const isDarkMode = useColorScheme() === 'dark';\n\n  /**\n   * init language\n   */\n  useEffect(() => {\n    i18n.use(initReactI18next).init({\n      resources: BaseSetting.resourcesLanguage,\n      lng: BaseSetting.defaultLanguage,\n      fallbackLng: BaseSetting.defaultLanguage,\n      compatibilityJSON: 'v3',\n    });\n  }, []);\n\n  /**\n   * when reducer language change\n   */\n  useEffect(() => {\n    i18n.changeLanguage(language);\n  }, [language]);\n\n  /**\n   * when theme change\n   */\n  useEffect(() => {\n    if (Platform.OS === 'android') {\n      StatusBar.setBackgroundColor(colors.primary, true);\n    }\n    StatusBar.setBarStyle(isDarkMode ? 'light-content' : 'dark-content', true);\n  }, [colors.primary, isDarkMode]);\n\n  return (\n    <NavigationContainer theme={theme}>\n      <RootStack.Navigator\n        screenOptions={{\n          headerShown: false,\n        }}\n        initialRouteName=\"Loading\">\n        <RootStack.Screen\n          name=\"Loading\"\n          component={Loading}\n          options={{gestureEnabled: false}}\n        />\n        <RootStack.Screen name=\"Main\" component={Main} />\n        <RootStack.Screen name=\"Filter\" component={Filter} />\n        <RootStack.Screen name=\"FlightFilter\" component={FlightFilter} />\n        <RootStack.Screen name=\"BusFilter\" component={BusFilter} />\n        <RootStack.Screen name=\"Search\" component={Search} />\n        <RootStack.Screen name=\"SearchHistory\" component={SearchHistory} />\n        <RootStack.Screen name=\"PreviewImage\" component={PreviewImage} />\n        <RootStack.Screen name=\"SelectBus\" component={SelectBus} />\n        <RootStack.Screen name=\"SelectCruise\" component={SelectCruise} />\n        <RootStack.Screen name=\"CruiseFilter\" component={CruiseFilter} />\n        <RootStack.Screen name=\"EventFilter\" component={EventFilter} />\n        <RootStack.Screen\n          name=\"SelectDarkOption\"\n          component={SelectDarkOption}\n          options={{\n            presentation: 'transparentModal',\n            cardStyleInterpolator: CardStyleInterpolators.forFadeFromCenter,\n            cardStyle: {backgroundColor: 'rgba(0, 0, 0, 0.5)'},\n            gestureEnabled: false,\n          }}\n        />\n        <RootStack.Screen\n          name=\"SelectFontOption\"\n          component={SelectFontOption}\n          options={{\n            presentation: 'transparentModal',\n            cardStyleInterpolator: CardStyleInterpolators.forFadeFromCenter,\n            cardStyle: {backgroundColor: 'rgba(0, 0, 0, 0.5)'},\n          }}\n        />\n      </RootStack.Navigator>\n    </NavigationContainer>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}